{"version":3,"sources":["components/AllPets.js","components/SpecificPet.js","components/NewPet.js","components/EditPet.js","App.js","reportWebVitals.js","index.js"],"names":["AllPets","useState","setAllPets","useEffect","axios","get","then","allData","console","log","results","data","Result","sort","a","b","nameA","Type","toUpperCase","nameB","catch","petObj","map","idx","Name","Description","_id","to","SpecificPet","props","petid","petInfo","setPetInfo","response","result","err","type","Skills","onClick","e","petID","delete","navigate","NewPet","formInfo","setFormInfo","errors","setErrors","changeHandler","target","name","value","onSubmit","preventDefault","post","id","onChange","style","color","message","cols","rows","EditPet","productid","put","App","className","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.153ba0f5.chunk.js","sourcesContent":["import React, {useEffect, useState} from 'react'; \r\nimport axios from 'axios';\r\nimport {Link} from '@reach/router'\r\nconst AllPets = () => {\r\n    const[AllPets, setAllPets] = useState([])\r\n    \r\n    useEffect(()=> {\r\n        axios.get(\"http://localhost:8000/pet/all\")\r\n        .then(allData => {\r\n            console.log(\"******\")\r\n            console.log (allData)\r\n            console.log(\"*******\")\r\n            let results = allData.data.Result\r\n            results.sort(function(a, b) {\r\n                var nameA = a.Type.toUpperCase(); // ignore upper and lowercase\r\n                var nameB = b.Type.toUpperCase(); // ignore upper and lowercase\r\n                if (nameA < nameB) {\r\n                  return -1;\r\n                }\r\n                if (nameA > nameB) {\r\n                  return 1;\r\n                }\r\n              \r\n                // names must be equal\r\n                return 0;\r\n              });\r\n            setAllPets(results)\r\n        }) \r\n        .catch(\"We not good!\")\r\n    }, [] )\r\n    \r\n    return (\r\n        <div>\r\n            <h4> HERE ARE ALL THE Pets Available for adoption</h4>\r\n            \r\n            {AllPets.sort(petObj=>petObj.Type).map ((petObj, idx)=>{\r\n                return <div> \r\n                    <h1> Pet: {petObj.Name} </h1>\r\n                    <p> Type: {petObj.Type}</p>\r\n                    <p> Description: {petObj.Description} </p>\r\n                    <p> ID: {petObj._id}</p>\r\n                    <button> <Link to ={`/pets/info/${petObj._id}`}> Details</Link> </button>\r\n                    <button> <Link to ={`/pets/edit/${petObj._id}`}> Edit</Link> </button> \r\n                    </div>\r\n            })}\r\n        </div>\r\n    );\r\n};\r\n\r\nAllPets.propTypes = {};\r\n\r\nexport default AllPets;","import React, {useEffect, useState}from 'react';\r\nimport axios from 'axios';\r\nimport {navigate, Link} from '@reach/router';\r\n\r\nconst SpecificPet = (props) => {\r\n    console.log(\"Logging the id of the quote\", props.petid)\r\n    \r\n    const[petInfo, setPetInfo] = useState({})\r\n    useEffect(() => {\r\n        axios.get(`http://localhost:8000/pet/${props.petid}`)\r\n        .then(response => {\r\n            console.log(\"****\")\r\n            console.log(response)\r\n            console.log(\"*****\")\r\n            setPetInfo(response.data.result)\r\n        })\r\n        .catch(err => console.log(err))\r\n    }, [])\r\n\r\n    const deletePet = (e, petID)=> {\r\n        console.log(\"Delete the pet\", petID)\r\n        axios.delete(`http://localhost:8000/pet/delete/${petID}`)\r\n            .then(response=> {\r\n                console.log(\"***\")\r\n                console.log(response)\r\n                console.log(\"*****\")\r\n                navigate(\"/\")\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Link to =\"/\"> Return to homepage</Link>\r\n            <h1> Details about Pet: {petInfo.Name} </h1>\r\n            <p> {petInfo.type}</p>\r\n            <p> {petInfo.Description}</p>   \r\n            <p> {petInfo.Skills}</p>\r\n            <button onClick={(e)=> deletePet(e, petInfo._id)}>Adopt {petInfo.Name} </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nSpecificPet.propTypes = {};\r\n\r\nexport default SpecificPet;","import React, {useState} from 'react';\r\nimport axios from 'axios';\r\nimport {navigate, Link} from '@reach/router';\r\nconst NewPet = () => {\r\n    const [formInfo, setFormInfo]= useState({\r\n        Name:\"\",\r\n        Type:\"\",\r\n        Description:\"\",\r\n        Skills:\"\"\r\n    })\r\n    const [errors, setErrors] = useState({\r\n\r\n    })\r\n    const changeHandler = (e)=> {\r\n        console.log(\"changing the input\")\r\n        console.log(e.target.name)\r\n        setFormInfo({\r\n            ...formInfo,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n    const submitHandler = (e)=> {\r\n        e.preventDefault()\r\n        console.log (\"I am submitting something\", formInfo)\r\n        axios.post(\"http://localhost:8000/pet/create\", formInfo)\r\n        .then(response => {\r\n            console.log(response)\r\n            if(response.data.Result){\r\n            navigate(\"/\")\r\n        }\r\n            else{\r\n                setErrors(response.data.err.errors)\r\n            }\r\n        })\r\n        .catch(err=> console.log(\"errors\", err))\r\n    }\r\n    return (\r\n        <div>\r\n            <Link to =\"/\"> Return to homepage</Link>\r\n            <h3> Pet Registration Form </h3>\r\n            <form onSubmit={submitHandler}>\r\n                <p> Name: <input type= \"text\" name=\"Name\" id=\"\" onChange={changeHandler}/> </p>\r\n                <p style = {{color:\"red\"}}>{errors.Name? errors.Name.message : \"\"}</p>\r\n                <p> Type: <input type= \"text\" name=\"Type\" id=\"\" onChange={changeHandler}/> </p>\r\n                <p style = {{color:\"red\"}}>{errors.Type? errors.Type.message : \"\"} </p>\r\n                <p> Description: <textarea name=\"Description\" id=\"\" cols=\"30\" rows=\"10\" onChange={changeHandler}> </textarea> </p>\r\n                <p style = {{color:\"red\"}}>{errors.Description? errors.Description.message : \"\"} </p>\r\n                <p> Skills: <input type= \"text\" name=\"Skills\" id=\"\" onChange={changeHandler}/> </p>\r\n                <input type = \"submit\" value = \"Add Pet\"/>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nNewPet.propTypes = {};\r\n\r\nexport default NewPet;","import React, {useEffect, useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport axios from 'axios';\r\nimport {navigate, Link} from '@reach/router';\r\n\r\nconst EditPet = (props) => {\r\n    const [formInfo, setFormInfo]= useState({\r\n        Name:\"\",\r\n        Type:\"\",\r\n        Description:\"\",\r\n        Skills:\"\"\r\n    })\r\n\r\n    const [errors, setErrors]= useState ({\r\n\r\n    })\r\n    useEffect(()=>{\r\n        axios.get(`http://localhost:8000/pet/${props.petid}`)\r\n        .then(response=>{\r\n            console.log(response)\r\n            setFormInfo(response.data.result)\r\n        })\r\n        .catch(err=> console.log(err))\r\n    }, [])\r\n\r\n    const changeHandler = (e)=> {\r\n        console.log(\"changing the input\")\r\n        console.log(e.target.name)\r\n        setFormInfo({\r\n            ...formInfo,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n    const submitHandler = (e)=> {\r\n        e.preventDefault()\r\n        console.log (\"I am submitting something\", formInfo)\r\n        axios.put(`http://localhost:8000/pet/update/${props.petid}`, formInfo)\r\n        .then(response => {\r\n            console.log(response)\r\n            if(response.data.Result) {\r\n            navigate(\"/\") }\r\n            else {\r\n                setErrors(response.data.err.errors)\r\n            }\r\n        })\r\n        .catch(err=> console.log(\"errors\", err))\r\n    }\r\n    return (\r\n        <div>\r\n            <Link to =\"/\"> Return to homepage</Link>\r\n            <h3> Form Edit for the Product: {props.productid} </h3>\r\n            <form onSubmit={submitHandler}>\r\n                <p> Name: <input type= \"text\" name=\"Name\" id=\"\" onChange={changeHandler} value= {formInfo.Name}/> </p>\r\n                <p style = {{color:\"red\"}}>{errors.Name? errors.Name.message : \"\"}</p>\r\n                <p> Type: <input type= \"text\" name=\"Type\" id=\"\" onChange={changeHandler} value= {formInfo.Type}/> </p>\r\n                <p style = {{color:\"red\"}}>{errors.Type? errors.Type.message : \"\"} </p>\r\n                <p> Description: <textarea name=\"Description\" id=\"\" cols=\"30\" rows=\"10\" onChange={changeHandler} value= {formInfo.Description}> </textarea> </p>\r\n                <p style = {{color:\"red\"}}>{errors.Description? errors.Description.message : \"\"} </p>\r\n                <p> Skills: <input type= \"text\" name=\"Skills\" id=\"\" onChange={changeHandler} value= {formInfo.Skills}/> </p>\r\n                <input type = \"submit\" value = \"Edit Pet\"/>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nEditPet.propTypes = {};\r\n\r\nexport default EditPet;","import './App.css';\nimport AllPets from './components/AllPets';\nimport {Router, Link} from '@reach/router';\nimport SpecificPet from './components/SpecificPet';\nimport NewPet from './components/NewPet';\nimport EditPet from './components/EditPet';\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Link to =\"/pets/new\"> Add a Pet to the Shelter</Link>\n      <h1> Adoption Center </h1>\n      \n\n      <Router>\n      <AllPets path=\"/\"></AllPets>\n        <NewPet path= \"/pets/new\"></NewPet>\n        <EditPet path = \"/pets/edit/:petid\"></EditPet>\n        <SpecificPet path = \"/pets/info/:petid\"></SpecificPet>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}